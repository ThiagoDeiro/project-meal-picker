{"version":3,"sources":["component/Spinner.js","Home.js","component/Card.js","component/SearchResult.js","component/Marker.js","component/ResDetails.js","component/Navigation.js","component/CuisineInfo.js","component/SearchLocation.js","App.js","serviceWorker.js","index.js"],"names":["Spinner","props","console","log","items","length","state","selectedItem","wheelRefs","selectItem","bind","this","setState","map","item","React","createRef","Math","floor","random","onSelectItem","setTimeout","wheelVars","spinning","Fragment","className","ref","wheelRef","style","onClick","index","key","id","name","to","Component","defaultProps","Home","getHour","hour","Date","getHours","places","favCuisines","Axios","method","url","headers","then","response","cuisineName","data","cuisines","catch","error","getName","_","sampleSize","e","cuisine","cuisine_name","cuisine_id","Card","src","card_img","alt","resturant_title","location_name","SearchResult","cityData","searchInput","searchHandler","event","value","target","handleChange","restaurants","restaurant","j","class","location","address","featured_image","type","placeholder","onChange","Marker","color","backgroundColor","cursor","title","ResDetails","res_info","res_tags","center","lat","lng","zoom","showCreditCard","showTakeaway","showKid","resInformation","resTags","split","parseFloat","latitude","longitude","displayHighlight","highlights","includes","resImg","photos","slice","photo","tag","icon","faCreditCard","size","faUtensils","faChild","timings","height","width","bootstrapURLKeys","text","Navigation","CuisineInfo","cuisine_info","getInfo","r","locality","searchLocation","street_number","street_name","suburb","region","formatted_address","myLocLong","myLocLat","resolvedLoc","resolvedSuburb","entity_id","entity_type","searchResult","restaurant_name","restaurant_location","restaurant_photo","cuisines_available","selected_category","searchResults","googleApi","handleChangeStreetNo","handleChangeStreetName","handleChangeSuburb","handleChangeState","handleSubmit","document","createElement","replace","locationData","results","geometry","a","async","location_suggestions","forEach","preventDefault","onSubmit","result","App","path","SearchLocation","Boolean","window","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7407e580.chunk.js","sourcesContent":["import React from 'react'\nimport './Spinner.css'\nimport { Link } from '@reach/router'\nimport PropTypes from 'prop-types';\n\n\nclass Spinner extends React.Component {\n  \n    constructor(props) {\n        super(props);\n        console.log(this.props.items.length)\n        this.state = {\n          selectedItem: null,\n          wheelRefs: []\n        };\n        this.selectItem = this.selectItem.bind(this);\n      }\n      \n      UNSAFE_componentWillReceiveProps(props) {\n        this.setState(state => ({...state, wheelRefs: props.items.map((item) => React.createRef())}))\n      }\n\n       selectItem() {\n        if (this.state.selectedItem === null) {\n          const selectedItem = Math.floor(Math.random() * this.props.items.length);\n          if (this.props.onSelectItem) {\n            this.props.onSelectItem(selectedItem);\n          }\n          this.setState({ selectedItem });\n        } else {\n          this.setState({ selectedItem: null });\n          setTimeout(this.selectItem, 500);\n        }\n      }\n    \n      render() {\n        console.log('render: ' + this.props.items.length);\n        const { selectedItem } = this.state;\n        const { items } = this.props;\n    \n        const wheelVars = {\n          '--nb-item': items.length,\n          '--selected-item': selectedItem,\n        };\n        const spinning = selectedItem !== null ? 'spinning' : '';\n        return (\n        <React.Fragment>\n          <div className=\"wheel-container\">\n            <div className={`wheel ${spinning}`} ref={this.wheelRef} style={wheelVars} onClick={() => { this.selectItem(); }}>\n              {items.map((item, index) => (\n                <div className=\"wheel-item\" key={item.id} style={{ '--item-nb': index }}>\n                  {item.name}\n                </div>\n              ))}\n            </div>\n          </div>\n          <h2>Let's eat <Link to={`/cuisine/${this.state.selectedItem ? items[this.state.selectedItem].id : null}`}> {this.state.selectedItem && items[this.state.selectedItem].name}</Link></h2>\n          </React.Fragment>\n        );\n      }\n};\n\nSpinner.propTypes = {\n  items: PropTypes.array\n}\n\nSpinner.defaultProps = {\n  items: [{\n    '0': {\n      name: '',\n      id: null\n    }\n  }]\n\n}\n\n\nexport default Spinner;","import React from 'react'\nimport Spinner from './component/Spinner'\nimport Axios from 'axios'\nimport _ from 'lodash'\nimport {Redirect} from '@reach/router'\n\n\n\nclass Home extends React.Component {\n    constructor() {\n        super();\n        this.places = ['Thai', 'Italian', 'Japanese', 'Brazillian', 'Mexican', 'Fastfood', 'Chinese', 'Pizza', 'Healthy'];\n        this.state = {\n        favCuisines: [],\n        hour: null\n      }\n      }\n      componentDidMount(){\n        const url_key = 'ce01c524c280392f934d5bb8228b2277'\n        Axios({\n           method: \"GET\",\n           url: `https://developers.zomato.com/api/v2.1/cuisines?city_id=260`,\n           headers: {\n             \"user-key\": url_key,\n             \"content-type\": \"application/json\"\n           }\n         })\n           .then(response => {\n               const cuisineName = response.data.cuisines;\n               this.setState({favCuisines: cuisineName})\n              //  console.log(this.state.favCuisines)\n           })\n           .catch(error => {   \n             console.log(error);\n           });\n\n           this.getHour()\n\n      }\n      \n      getHour = () => {\n        const date = new Date();\n        const hour = date.getHours()\n        this.setState({\n           hour\n        });\n       }\n\n      render(props) {\n        const sample = _.sampleSize(this.state.favCuisines, 15)\n        // console.log(sample)\n        const getName = sample.map((e) => {\n          \n            return {name: e.cuisine.cuisine_name, id: e.cuisine.cuisine_id}\n        });\n        // console.log(getName)\n        return (\n          <>\n            {/* {!this.props.user.isLoggedIn && <Redirect to=\"/\" /> } */}\n            <div className=\"App\">\n              <h1>What should I eat for \n              {this.state.hour < 10 ? ` breakfast` : this.state.hour >14 ?` dinner`:` lunch`} ?\n              </h1>\n              <Spinner items={getName} />\n              \n            </div>\n            </>\n          );\n\n      }\n}\n\nexport default Home;","import React from 'react'\nimport './Card.css'\nimport { Heart,MapPin  } from 'react-feather' \n\n\nclass Card extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n\n        }\n    }\n\n    render() {\n\n    return (\n        <div className=\"card-container\">\n            <div className=\"heart\"><Heart /></div>\n            <div className=\"card-img\">\n                <img className=\"img-fluid\" src={this.props.card_img} alt=' ' />\n            </div>\n            <span className=\"card-link\">\n                <div className=\"card-img--hover\">\n                {/* <img src={this.props.card_img} /> */}\n                </div>\n                \n            <div className=\"card-info\">\n                <span className=\"cuisine\">{this.props.cuisine}</span>\n                <h3 className=\"resturant-title\">{this.props.resturant_title}</h3>\n                <div className=\"location\">\n                    <div className=\"pin\"><MapPin/></div><span className=\"location_name\">{this.props.location_name}</span>\n                </div>\n            </div>\n            </span>       \n        </div>\n    \n    )}\n}\n\nexport default Card;","import React from 'react'\nimport Card from './Card'\nimport Axios from 'axios'\nimport { Link } from '@reach/router'\nimport './SearchResult.css'\nexport default class SearchResult extends React.Component{\n    state = {\n        cityData: [],\n        searchInput: \" \",\n    }\n\n  searchHandler = (event) => {\n \n    const value = event.target.value;\n    this.setState(state => ({...state, searchInput: value}));\n  }\n    \n  handleChange= () => {\n        const url_key = 'c5ff9358cc3104a45cd8df377b24b5a3'\n         Axios({\n            method: \"GET\",\n            url: `https://developers.zomato.com/api/v2.1/search?entity_id=260&entity_type=city&q=${this.state.searchInput}`,\n            headers: {\n              \"user-key\": url_key,\n              \"content-type\": \"application/json\"\n            }\n          })\n            .then(response => {\n                const cityData = response.data.restaurants;\n                this.setState({cityData})\n                console.log(cityData)\n            })\n            .catch(error => {   \n              console.log(error);\n            });\n    }\n    \n    render(){\n\n        const dataAPI = this.state.cityData\n        const getResp = dataAPI.map(e => {\n            return e.restaurant\n        })\n        const getName = getResp.map((j)=>  <div className=\"col-4\" key={j.id}>\n        <Link class=\"card-link\" to={'/restaurant/'+ j.id}><Card  resturant_title={j.name} cuisine={j.cuisines} location_name={j.location.address}\n         card_img={j.featured_image} /></Link>\n        </div> )\n        return(\n        <div className=\"container search-results\">\n            <div class=\"row\">\n            <input type='text' className=\"form-control form-control-lg col-6 offset-2\" placeholder=\"What do you like to eat?\" onChange={this.searchHandler}></input>\n            <button className=\"btn btn-primary btn-lg col-1\" onClick={this.handleChange}>Search</button>\n            </div>\n            <br/>\n            <div>\n            <div className=\"row\">\n                {getName}\n             </div>    \n            </div>\n        </div>\n        )\n    }\n}","import React from 'react';\nimport './Marker.css';\n\nconst Marker = (props: any) => {\n    const { color, name, id } = props;\n    return (\n      <div className=\"marker\"\n        style={{ backgroundColor: color, cursor: 'pointer'}}\n        title={name}\n      />\n    );\n  };\n\n  export default Marker;","import React from 'react'\nimport Axios from 'axios'\n// import Navigation from './Navigation'\nimport './ResDetails.css'\nimport _ from 'lodash'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faCreditCard,faUtensils,faChild} from '@fortawesome/free-solid-svg-icons'\nimport GoogleMapReact from 'google-map-react'\nimport { MapPin } from 'react-feather' \nimport Marker from './Marker'\n\nexport default class ResDetails extends React.Component{\n\n   state={\n       res_info:[],\n       res_tags:[],\n       address: '',\n       center: {\n            lat: 0,\n            lng: 0\n       },\n       zoom: 18,\n       showCreditCard:false,\n       showTakeaway: false,\n       showKid:false\n   }\n    async componentDidMount(){\n        const url_key = 'ce01c524c280392f934d5bb8228b2277'\n        await Axios({\n           method: \"GET\",\n           url: `https://developers.zomato.com/api/v2.1/restaurant?res_id=${this.props.id}`,\n           headers: {\n             \"user-key\": url_key,\n             \"content-type\": \"application/json\"\n           }\n         })\n           .then(response => {\n               const resInformation = response.data;\n               this.setState({res_info: resInformation})\n           })\n           .catch(error => {   \n             console.log(error);\n           });\n\n           \n        let resTags = this.state.res_info.cuisines\n        resTags = resTags.split(', ');\n        console.log(resTags)\n        this.setState({res_tags: resTags})\n        \n        let address = this.state.res_info.location.address\n        this.setState({address: address})\n        let lat = parseFloat(this.state.res_info.location.latitude)\n        let lng = parseFloat(this.state.res_info.location.longitude)\n        this.setState({center: { lat:lat, lng:lng}})\n\n        this.displayHighlight();\n        }\n\n        displayHighlight() {\n\n            if(this.state.res_info.highlights.includes('Credit Card') )  {\n                this.setState({showCreditCard:true});\n            }\n            if(this.state.res_info.highlights.includes('Takeaway Available')) {\n                this.setState({showTakeaway: true});\n            }\n            if(this.state.res_info.highlights.includes('Kid Friendly')) {\n                this.setState({showKid:true});\n            }\n        }\n    render() {\n        let resImg = this.state.res_info.photos\n        \n        return(\n            \n            <React.Fragment>\n            <div className=\"container-fluid gal-holder no-gutters p-0\">\n                <div className=\"row no-gutters\">\n                <div className=\"col-lg-6 col-md-9 col-sm-12\"><img className=\"img-fluid featured-img\" src={this.state.res_info.featured_image} /></div>\n                <div className=\"col-3 no-gutters\">\n                    {resImg && resImg.slice(0,2).map(photo => (\n                    <>\n                    <div className=\"col-12\"><img className=\"img-fluid small-img\" src={photo.photo.url} /></div>\n                    </>\n                    ))}\n                </div>\n                <div className=\"col-3 no-gutters\">\n                    {resImg && resImg.slice(2,4).map(photo => (\n                    <>\n                    <div className=\"col-12\"><img className=\"img-fluid small-img\" src={photo.photo.url} /></div>\n                    </>\n                    ))}\n                </div>\n                </div>\n            </div>\n            <div className=\"container res-details\">\n                <div className=\"row\">\n                    <div className=\"col-6 text-left\">\n                        {\n                            this.state.res_tags.map(tag => (\n                                <span className=\"badge badge-dark\">{tag}</span>\n                            ))\n                        }\n                        <h1 className=\"res-name\">{this.state.res_info.name}</h1>\n                        <div className=\"highlight\">\n                            \n                                {this.state.showCreditCard? <div className=\"highlight-item col-4 text-center\"><FontAwesomeIcon icon={faCreditCard} size=\"2x\" /><p>Accept Credit card</p></div>:\"\"}\n                                {this.state.showTakeaway? <div className=\"highlight-item col-4 text-center\"><FontAwesomeIcon icon={faUtensils} size=\"2x\" /><p>Takeaway available</p></div>:\"\"}\n                                {this.state.showKid? <div className=\"highlight-item col-4 text-center\"><FontAwesomeIcon icon={faChild} size=\"2x\" /><p>Kid Friendly </p></div>:\"\"}\n\n                        </div>\n                      \n                        <h3>Opening Hours</h3>\n                        {this.state.res_info.timings}\n                    </div>\n                    <div className=\"col-6 text-left\">\n                        <p className=\"address\"><span className=\"pin\"><MapPin /></span>{this.state.address}</p>\n                       \n                        <div className=\"map-holder\" style={{ height: '450px', width: '100%' }}>\n                        <GoogleMapReact\n                            bootstrapURLKeys={{ key: 'AIzaSyCSiEcD8DEt-tw_ubWXsZFDkIei5gGpbCM' }}\n                            center={this.state.center}\n                            zoom={this.state.zoom}\n                            text={this.state.res_info.name} \n                        >\n                        <Marker\n                            lat={this.state.center.lat}\n                            lng={this.state.center.lng}\n                            name={this.state.res_info.name}\n                            color=\"#FFD000\"\n                        />\n                        </GoogleMapReact>\n                     \n                        </div>\n\n                    </div>\n                </div>\n                \n            </div>\n            </React.Fragment>\n        )\n    }\n    \n}\n\n","import React from 'react';\nimport {Link, Redirect} from '@reach/router';\nimport './Navigation.css'\nimport Home from '../Home'\n\nclass Navigation extends React.Component {\n    \n\n    render() {\n        return(\n        \n            <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n            <ul className=\"navbar-nav\">\n              < >\n                  \n                  <li className=\"nav-item\">\n                    <Link className=\"nav-link\" to=\"/\"><img className=\"logo\" alt=\"logo\" src=\"../logo.svg\"></img></Link>\n                  </li>\n                  <li className=\"nav-item\">\n                  <Link className=\"nav-link menu-text\" to=\"/search/\">Search</Link>\n                  </li>\n                  <li className=\"nav-item\">\n                  <Link className=\"nav-link menu-text\" to=\"/searchlocation/\">Search by Location</Link>\n                  </li> \n                    \n                    </> \n            </ul>\n           \n            </nav>\n\n        )\n    }\n}\n\nexport default Navigation","import React from 'react'\nimport Axios from 'axios'\n// import Navegation from './Navigation'\nimport Card from './Card'\nimport { Link } from '@reach/router'\nimport './CuisineInfo.css'\n\nexport default class CuisineInfo extends React.Component{\n    state ={\n        cuisine_info: []\n    }\n\n    \n        async componentDidMount(){\n            const url_key = 'ce01c524c280392f934d5bb8228b2277'\n            await Axios({\n               method: \"GET\",\n               url: `https://developers.zomato.com/api/v2.1/search?entity_id=260&entity_type=city&cuisines=${this.props.id}&sort=rating&order=asc`,\n               headers: {\n                 \"user-key\": url_key,\n                 \"content-type\": \"application/json\"\n               }\n             })\n               .then(response => {\n                   const resInformation = response.data.restaurants;\n                   this.setState({cuisine_info: resInformation})\n                   console.log(this.state.cuisine_info)\n               })\n               .catch(error => {   \n                 console.log(error);\n               });\n\n    \n        }\n    render(){\n        const getResult = this.state.cuisine_info.map(e =>{\n            return e.restaurant\n        })\n        const getInfo = getResult.map((r) =>  <div className=\"col-4\" key={r.id}>\n        <Link className=\"card-link\" to={'/restaurant/'+ r.id}><Card  resturant_title={r.name} cuisine={r.cuisines} location_name={r.location.locality}\n         card_img={r.featured_image} /></Link>\n        </div> )\n        return(\n            <div>\n                {/* <Navegation /> */}\n                <div className=\"container\">\n                <h1><mark>Search Results</mark></h1>\n                <div className=\"row\">\n                    {getInfo}\n                </div>\n                </div>\n            </div>\n        )\n    }\n}","import React from 'react';\nimport Axios from 'axios';\nimport Card from './Card'\n\n\n\n\nclass searchLocation extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            value: \"\",\n            location: \"\",\n            longitude: \"\",\n            latitude: \"\",\n            street_number: \"\",\n            street_name: \"\",\n            suburb: \"\",\n            region: \"\",\n            formatted_address: \"\",\n            myLocLong: \"\",\n            myLocLat: \"\",\n            resolvedLoc: \"\",\n            resolvedSuburb: \"\",\n            entity_id: \"\",\n            entity_type: \"\",\n            searchResult: \"\",\n            restaurant_name: [],\n            restaurant_location: [],\n            restaurant_photo: [],\n            cuisines_available: [],\n            selected_category: \"Takeaway\",\n            searchResults: []\n          }\n            \n        \n        this.googleApi = \"AIzaSyAnhc0QVawRAJP9z0c07bkJCp8wyoai_gk\"\n        this.handleChangeStreetNo = this.handleChangeStreetNo.bind(this);\n        this.handleChangeStreetName = this.handleChangeStreetName.bind(this);\n        this.handleChangeSuburb = this.handleChangeSuburb.bind(this);\n        this.handleChangeState = this.handleChangeState.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        \n        \n        \n       \n\n    }\n\n    handleChangeStreetNo(e) {\n        this.setState({street_number: e.target.value})\n    }\n    handleChangeStreetName(e) {\n        this.setState({street_name: e.target.value})\n    }\n    handleChangeSuburb(e) {\n        this.setState({suburb: e.target.value})\n    }\n    handleChangeState(e) {\n        this.setState({region: e.target.value})\n    }\n\n    drawMap() {\n        let mapDiv = document.createElement(\"div\");\n        let mapSrc = \"https://maps.googleapis.com/maps/api/staticmap?zoom=13&size=300x300&maptype=roadmap&markers=${this.state.address}&key=AIzaSyAnhc0QVawRAJP9z0c07bkJCp8wyoai_gk\"; \n    }\n\n\n\n\n\n\n\nhandleSubmit(e) {\n\n  const address = `${ this.state.street_number }${this.state.street_name.replace(/\\s/g,\"+\")},+${this.state.suburb.replace(/\\s+/g, '+')},+${this.state.region.replace(/\\s+/g, '+')}+Australia`;\n  Axios(`https://maps.googleapis.com/maps/api/geocode/json?address=${address}&key=${this.googleApi}`)\n       .then(response => {\n           const locationData = response.data;\n           const longitude = locationData.results[0].geometry.location.lng;\n           const latitude = locationData.results[0].geometry.location.lat;\n           const formatted_address = locationData.results[0].formatted_address;\n           this.setState({longitude: longitude})\n           this.setState({latitude: latitude})\n           this.setState({formatted_address: formatted_address})\n\n       }).then(async response => {\n\n       const data = await Axios({\n          method:\"GET\",\n          url: `https://developers.zomato.com/api/v2.1/locations?query=${this.state.region}&lat=${this.state.latitude}&lon=${this.state.longitude}`,\n          headers: {\n            \"user-key\": \"ac7e711aadc63ab23f578cab5c3051d4\",\n            \"content-type\": \"application/json\"\n          }\n        })\n        return data;\n      })\n      .then(response => {\n        const entity_id = response.data.location_suggestions[0].entity_id;\n        const entity_type = response.data.location_suggestions[0].entity_type;\n\n        this.setState({entity_id:entity_id})\n        this.setState({entity_type:entity_type})\n        console.log(entity_id);\n        console.log(entity_type);\n       }).then(async response => {\n          const data = await Axios({\n                        method:\"GET\",\n                        url: `https://developers.zomato.com/api/v2.1/search?entity_id=${this.state.entity_id}&entity_type=${this.state.entity_type}&count=5`,\n                        headers: {\n                          \"user-key\": \"ac7e711aadc63ab23f578cab5c3051d4\",\n                          \"content-type\": \"application/json\"\n                        }\n                      })\n          return data;\n         \n       }).then(response => {\n         const searchResult = response.data.restaurants;\n         console.log(\"searchResult\", searchResult)\n         this.setState({searchResults: searchResult})\n\n        \n\n                searchResult.forEach(item => {\n                  console.log(item);\n                  const restaurant_name = item.restaurant.name;\n                  const restaurant_location = item.restaurant.location.address;\n                  const restaurant_photo = item.restaurant.photos[0].photo.url ? item.restaurant.photos[0].photo.url : \"https://b.zmtcdn.com/data/reviews_photos/947/0d02c61e2f22f4b2859535d712286947_1525861858.jpg\";\n                  console.log(restaurant_location);\n                  this.setState({restaurant_name: [...this.state.restaurant_name, restaurant_name]})\n                  this.setState({restaurant_location: [...this.state.restaurant_location, restaurant_location]})\n                  this.setState({restaurant_photo: [...this.state.restaurant_photo, restaurant_photo]})\n                \n                })\n\n\n       })\n      \n  console.log(`${this.state.latitude},${this.state.longitude}`);\n\n  e.preventDefault()\n\n}\n\n    render() {\n        return (\n\n            <div className=\"main-container\">\n            <h1>address</h1>\n            <form onSubmit={this.handleSubmit}>\n              <label>Street no </label>\n              <input\n                type=\"text\"\n                name=\"street_no\"\n                onChange={this.handleChangeStreetNo}\n              />\n\n              <label>Street Name </label>\n              <input\n                type=\"text\"\n                name=\"street_name\"\n                onChange={this.handleChangeStreetName}\n              />\n\n              <label>Suburb/City</label>\n              <input\n                type=\"text\"\n                name=\"suburb\"\n                onChange={this.handleChangeSuburb}\n              />\n\n              <label>State</label>\n              <input \n                type=\"text\" \n                name=\"state\" \n                onChange={this.handleChangeState} \n              />\n\n              <input type=\"submit\" value=\"Submit\" />\n\n              <br />\n\n            </form>\n\n              <div>\n\n                {this.state.searchResults.map(result => (\n                 \n                  <div>\n                  <Card resturant_title={result.restaurant_name}/>\n                    <div>Restaurant name</div>\n                    <div>{result.restaurant.name}</div>\n                    <div>Cuisine</div>\n                    <div>{result.restaurant.location.address}</div>\n                    {result.restaurant.photos.map(photo => (\n                      <img src={photo.photo.url} height=\"200px\" width=\"200px\" alt=\"restaurant\"/>\n                    ))}\n                  </div>\n                ))}\n\n\n\n              </div>\n\n\n\n\n                \n            </div>\n        )\n    }\n}\n\n\n\nexport default searchLocation;\n","import React from 'react';\nimport './App.css';\nimport Home from './Home';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport SearchResults from './component/SearchResult'\nimport { Router, navigate, Redirect } from '@reach/router'\nimport ResDetails from './component/ResDetails'\nimport Navigation from './component/Navigation'\nimport CuisineInfo from './component/CuisineInfo'\nimport SearchLocation from './component/SearchLocation';\nexport default class App extends React.Component {\n\n  render(){\n \n  return (\n\n        <div className=\"App\">\n        <Navigation  />\n          <Router>\n            <Home path=\"/\" />\n            <SearchResults path=\"/search/\" />\n            <ResDetails path='/restaurant/:id' />\n            <CuisineInfo path='/cuisine/:id' />\n            <SearchLocation path=\"/searchlocation/\"/>\n            \n          </Router>\n           \n        </div>\n  );\n  }\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}